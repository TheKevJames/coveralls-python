[project]
name = "coveralls"
version = "4.1.1"
description = "Show coverage stats online via coveralls.io"
authors = [{name="Kevin James", email="coveralls-python@thekev.in"}]
readme = "README.rst"
license = {text="MIT"}
dynamic = ["classifiers"]
requires-python = ">=3.9"
dependencies = [
    "coverage[toml] (>=6.1.2,<8.0.0)",
    "docopt-ng (>=0.6.1,<1.0.0)",
    "httpx (>=0.28.1,<0.29.0)"
]

[project.optional-dependencies]
yaml = ["pyyaml (>=3.10,<7.0)"]

[project.urls]
Changelog = "https://github.com/TheKevJames/coveralls-python/blob/master/CHANGELOG.md"
repository = "http://github.com/TheKevJames/coveralls-python"
Docs = "https://coveralls-python.rtfd.io/"

[project.scripts]
coveralls = "coveralls.cli:main"
python-coveralls = "coveralls.cli:main"

[tool.poetry]
packages = [
    { include = "coveralls" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Topic :: Software Development :: Testing",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]


[tool.poetry.group.dev.dependencies]
pytest = ">=8.3.5"
mypy = ">=1.15.0"
types-pyyaml = ">=6.0.12.20250326"
respx = ">=0.22.0"

[tool.poetry.group.docs]
optional = true
[tool.poetry.group.docs.dependencies]
sphinx = ">=7.4.7"

[tool.pytest.ini_options]
# addopts = "-Werror"
filterwarnings = [
    "error",
    # cov5 and cov6 are deprecated on py3.12+
    "ignore:co_lnotab is deprecated, use co_lines instead:DeprecationWarning",
]

[tool.ruff]
line-length=79

[tool.ruff.format]
# The quote style preserve leaves the quotes of all strings unchanged.
quote-style = "preserve"
exclude = ["example/project.py", "nonunicode/nonunicode.py", "nonunicode/malformed.py"]

[tool.ruff.lint]
extend-select = [
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # https://docs.astral.sh/ruff/rules/#pyupgrade-up
]
exclude = ["nonunicode/nonunicode.py"]

[tool.mypy]
python_version = "3.9"
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"
